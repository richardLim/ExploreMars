<!DOCTYPE html>
<html xmlns:fb="http://ogp.me/ns/fb#" lang="ko">
	<head>
		<script src="http://code.jquery.com/jquery-1.11.0.js"></script>
		<script type="text/javascript">
			$(function() {
				$("#reset").on("click", function() {
					$("#commands").val('');
				});
				$("#go").on("click", function() {
					$("#result").empty();
					Mars.initRobot();
					Mars.getCommands();
					Mars.startExplore();
				});
			});

			var Robot = function() {
				this.pos = { x : 0, y : 0 },
				this.step = [	
					{ x : 0, y : 1 },  // N 
					{ x : 1, y : 0 },  // E
					{ x : 0, y : -1 }, // S
					{ x : -1, y : 0 }  // W
				], 
				this.direction = 0,
				this.moveCmd = [],
				this.isLost = false;

				this.setDirection = function(direction) {
					if (direction == "N") {
						this.direction = 0
					} else if (direction == "E") {
						this.direction = 1
					} else if (direction == "S") {
						this.direction = 2
					} else if (direction == "W") {
						this.direction = 3
					}
				}, 

				this.getDirection = function(direction) {
					if (direction == 0) {
						return "N";
					} else if (direction == 1) {
						return "E";
					} else if (direction == 2) {
						return "S";
					} else if (direction == 3) {
						return "W";
					}
				}, 

				this.turnRobot = function(turnType) {
					var direction = this.direction;
					if (turnType == "R") {
						direction++;
					} else if (turnType == "L") {
						if ( this.direction == 0)
							direction = direction + 4;
						direction--;
						
					}
					this.direction = Math.abs(direction) % 4;
				}, 

				this.moveRobot = function() {
					if(Mars.isCliff(this.pos.x, this.pos.y, this.direction))
						return;

					var x = this.pos.x + parseInt(this.step[this.direction].x);
					var y = this.pos.y + parseInt(this.step[this.direction].y);

					if (x > parseInt(Mars.grdSize.x) || y > parseInt(Mars.grdSize.y) || x < 0 || y < 0)
						this.isLost = true;
					else
						this.isLost = false;

					if (this.isLost == true) {
						Mars.addCliff({ x : this.pos.x, y : this.pos.y, direction : this.direction });
						$("#result").append("<li>" + this.pos.x + " " + this.pos.y + " " + this.getDirection(this.direction) + " " + "LOST</li>");
					}

					this.pos.x = x;
					this.pos.y = y;
				}

				this.doneRobot = function() {
					$("#result").append("<li>" + this.pos.x + " " + this.pos.y + " " + this.getDirection(this.direction) + "</li>").append();
				}
			}

			Mars = {
				cmdToken : ' ',
				grdSize : { x : 0, y : 0 },
				robots : [],
				cliff : [], 

				initRobot : function() {
					Mars.robots = [];
					Mars.cliff = [];
				}, 

				getCommands : function() {
					var cmds = $("#commands").val().split('\n');
					Mars.parseCommand(cmds);
				},

				parseCommand : function(cmds) {
					var i = 0;
					var x = 0;
					var y = 0;
					var direction = '';

					for (i in cmds) {
						var cmd = $.trim(cmds[i]);
						if (i == 0) {
							Mars.grdSize.x = cmd.split(Mars.cmdToken)[0] > 50 ? 50 : cmd.split(Mars.cmdToken)[0];
							Mars.grdSize.y = cmd.split(Mars.cmdToken)[1] > 50 ? 50 : cmd.split(Mars.cmdToken)[1];
						} else {
							if (i % 2 == 1) {
								x = cmd.split(Mars.cmdToken)[0];
								y = cmd.split(Mars.cmdToken)[1];
								direction = cmd.split(Mars.cmdToken)[2];
							} else {
								var moveCmd = new Array(cmd.length);
								for( k = 0; k < cmd.length; k++) {
									moveCmd[k] = cmd.substr(k, 1);
								}

								var robot = new Robot();
								robot.pos.x = parseInt(x);
								robot.pos.y = parseInt(y);
								robot.isLost = false;
								robot.setDirection(direction);
								robot.moveCmd = moveCmd;
								Mars.robots[Mars.robots.length] = robot;
							}
						}
						i++;
					}
				},

				startExplore : function() {
					for (i in  Mars.robots) {
						var robot = Mars.robots[i];
						for(j in robot.moveCmd) {
							if (robot.isLost)
								break;
							var movecmd = robot.moveCmd[j];
							if (movecmd == "R" || movecmd == "L") {
								robot.turnRobot(movecmd);
							} else if (robot.moveCmd[j] == 'F') {
								robot.moveRobot();
							}

							if(parseInt(j) == robot.moveCmd.length-1) {
								robot.doneRobot();
							}
						}
					}
				},

				addCliff : function(cliff) {
					Mars.cliff[Mars.cliff.length] = cliff;
				},

				isCliff : function(x, y, direction) {
					var isCliff = false;
					for(i in Mars.cliff )
					{
						if(parseInt(Mars.cliff[i].x) == x && parseInt(Mars.cliff[i].y) == y && parseInt(Mars.cliff[i].direction) == direction) {
							isCliff = true;
							break;
						}
					}
					return isCliff;
				}
			}

		</script>
	</head>

	<body>
		<h2>Command</h2>
		<textarea id="commands" style="height:300px; width: 500px;">5 3 
1 1 E 
RFRFRFRF 
3 2 N 
FRRFLLFFRRFLL 
0 3 W 
LLFFFLFLFL</textarea>
		<input type="button" id="reset" value="Clear Command" />
		<input type="button" id="go" value="Explore" />
		<h2>Result</h2>
		<ul id="result"></ul>
	</body>
</html>
